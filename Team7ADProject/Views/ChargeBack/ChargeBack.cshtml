@model IEnumerable<Team7ADProject.ViewModels.DepartmentChargeBackViewModel>

@{
    ViewBag.Title = "ChargeBack";
}
<head>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>


    <script>
        $(function () {
            $("#fromDTP").datepicker({
                required: true,
                yearRange: "2017:+0",
                dateFormat: 'dd MM yy',
                message: "This is a required field",
                maxDate: '0',
                defaultDate: "01 January 2017",
                changeMonth: true,
                changeYear: true,
                showOn: "both",
                onSelect: function (dateText, inst) {
                    $("#toDTP").datepicker("option", "minDate", $("#fromDTP").datepicker("getDate"));
                }
            }
            );

            $("#toDTP").datepicker({
                required: true,
                dateFormat: 'dd MM yy',
                minDate: "01 January 2017",
                message: "This is a required field",
                maxDate: '0',
                changeMonth: true,
                changeYear: true,
                showOn: "both"
            });

            $("#toDTP").validate();
            $("#fromDTP").validate();

            $("[type=date]").datepicker({
                onClose: function () {
                    $(this).valid();
                }
            });
        });

    </script>
</head>
<div class="custcontainer">
    <h2>Department Charge Back</h2>
    <p></p>
    <hr />
    @{decimal total = 0;
        foreach (var item in Model.Select(x => x.TransactionDetail))
        {
            var q = item.Where(x => x.Disbursement.DisbursementId == x.TransactionRef).
                 Sum(x => x.Quantity * x.UnitPrice);
            total = total + (decimal)q;
        }
    }

    <div>
        <form id="rangeDTP" name="rangeDTP" action='@Url.Action("ChargeBack","ChargeBack")' method="post">
            <p>
                View charge back from <input type="text" name="fromDTP" id="fromDTP" required placeholder="Please select a date" onkeypress="return false;"> to
                <input type="text" name="toDTP" id="toDTP" required placeholder="Please select a date" onkeypress="return false;">.
            </p>
            <p><input type="submit" id="submitBtn" value="View" class="greenBtn pull-right"/></p>
            <p><button type="submit" id="exportBtn" formaction='@Url.Action("ExportRpt","ChargeBack")' class="blueBtn" formmethod="post">Export Report</button></p>
        </form>
    </div>



    <hr />
    <p>
        Total charge back for the department is @String.Format("{0:c}", total)
    </p>
    <hr />
    <div>
        @if (Model.ToList().Count() > 0)
        {
            <table class="table">
                <tr>
                    <th>

                    </th>
                    <th>Acknowledged By</th>
                    <th>Disbursement Date</th>
                    <th>Amount</th>
                    <th>Status</th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i + 1 }))
                {
                    <tr>
                        <td>
                            @item.Index
                        </td>
                        <td>
                            @item.Data.AcknowledgedBy
                        </td>
                        <td>
                            @String.Format("{0:dd MMM yyyy}", item.Data.Date)
                        </td>
                        <td>
                            @String.Format("{0:c}",
                        item.Data.TransactionDetail.Where(x => x.TransactionRef == item.Data.DisbursementId).
                        Sum(x => x.Quantity * x.UnitPrice))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Data.Status)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "ChargeBackDetails", new { id = item.Data.DisbursementId })
                        </td>
                    </tr>
                }

            </table>
        }

    </div>
</div>