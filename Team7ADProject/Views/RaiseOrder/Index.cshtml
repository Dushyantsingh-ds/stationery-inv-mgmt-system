@model Team7ADProject.ViewModels.RaisePOViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
}

<h4>Raise Purchase Order</h4>
<h3> @ViewBag.PoNo</h3>


@using (Html.BeginForm("Save", "RaiseOrder", FormMethod.Post))
{
    <input type="submit" value="Save" class="btn btn-default" />
    <table>
        <tr>
            <th>Category</th>
            <th>Item</th>
            <th>Supplier</th>
            <th>Quantity</th>
            <th>Amount</th>
            <th>Remarks</th>
            <th></th>
        </tr>

        <tr>
            <td>@Html.DropDownListFor(m => m.Category, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", name = "category" })</td> 
            <td>@Html.DropDownListFor(m => m.Description, Enumerable.Empty<SelectListItem>(), new { @class = "form-control table2", name = "description" })</td>
            
            <td>@Html.DropDownListFor(model => model.SupplierId, new SelectList(Model.Suppliers, "SupplierId", "SupplierName"), "Select supplier", new { @class = "form-control" })</td>
            <td>
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </td>

            <td>
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </td>
            <td></td>
            <td>
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </td>

        </tr>
    </table>
}

@section scripts
{
    <script>
        var $dropdown1 = $("select[name='Category']");
        var $dropdown2 = $("select[name='Description']");
        $dropdown1.append('<option>Select Category</option>');
        $dropdown2.append('<option>Select Item</option>');
        //First load of list
        $.ajax({
            url: '../api/stationeries/categories/',
            type: 'GET',
            //data: 'q=' + str,
            dataType: 'json',
            success: function (json) {
                $.each(json, function (i, value) {
                    $dropdown1.append($('<option>').text(value).attr('value', value));
                    //$('#myselect').append($('<option>').text(value).attr('value', value));
                });
            }
        });
        //Load 2nd list
        $dropdown1.change(function () {
            $dropdown2.empty();
            $dropdown2.append('<option>Select Item</option>');
            //$('#myselect').append($('<option>').text(value).attr('value', value));
            $.ajax({
                url: '../api/stationeries/categories/' + $dropdown1.val(),
                type: 'GET',
                //data: 'q=' + str,
                dataType: 'json',
                success: function (json) {
                    $.each(json, function (i, value) {
                        $dropdown2.append('<option value="' + value.Id + '">' + value.ItemDescription + '</option>');
                    });
                }
            });
        });
        //Load unit of measure
        $dropdown2.change(function () {
            $.ajax({
                url: '../api/stationeries/item/' + $dropdown2.val(),
                type: 'GET',
                //data: 'q=' + str,
                dataType: 'json',
                success: function (json) {
                    $("#uom").val(json);
                }
            });
        });
    </script>
}



