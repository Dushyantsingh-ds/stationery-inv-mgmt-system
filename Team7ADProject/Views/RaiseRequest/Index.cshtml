@model Team7ADProject.ViewModels.RaiseRequestViewModel

@{
    ViewBag.Title = "Raise Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Raise Request</h2>

@using (Html.BeginForm("Add", "RaiseRequest"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="form-group">
        <table>
            <tr>
                <td>Category</td>
                <td>
                    @*@Html.DropDownList("category", Enumerable.Empty<SelectListItem>(), "Select Category", new { @class = "form-control" })*@
                    @Html.DropDownListFor(m => m.Category, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", name = "category" })
                    @Html.ValidationMessageFor(m => m.Category)
                </td>
            <tr>
                <td>Description</td>
                <td>
                    @*@Html.DropDownList("description", Enumerable.Empty<SelectListItem>(), "Select Item", new { @class = "form-control table2" })*@
                    @Html.DropDownListFor(m => m.Description, Enumerable.Empty<SelectListItem>(), new { @class = "form-control table2", name = "description" })
                    @Html.ValidationMessageFor(m => m.Description)
                </td>
            <tr>
                <td>Unit of measure</td>
                <td>
                    @Html.EditorFor(m => m.UnitOfMeasure, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", id="uom" } })
                    @*@Html.LabelFor(m => m.UnitOfMeasure, new { id = "uom", @class = "form-control" })*@
                </td>
            <tr>
                <td>Quantity</td>
                <td>
                    @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Quantity)
                </td>
            </tr>
        </table>
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Add</button>
    </div>
}

<h2>Request List</h2>
<div class="form-group">
    <table class="table table-bordered table-hover">
        <thead>
        <tr>
            <td>No.</td>
            <td>Category</td>
            <td>Item name</td>
            <td>Unit of measure</td>
            <td>Quantity</td>
            <td>Delete</td>
        </tr>
        </thead>
        @if (Model==null)
        {
            <p>We don't have any request yet.</p>
        }
        else
        {
            <tbody>
            @{ int i = 1; }
            @foreach (var current in Model.Models)
            {
                <tr>
                    <td>@(i++)</td>
                    <td>@current.Category</td>
                    <td>@current.Description</td>

                    <td>@current.UnitOfMeasure</td>
                                        <td>@current.Quantity</td>
                    <td>
                        <button data-stationery-id="@current.Description" class="btn-link js-delete">Delete</button>
                    </td>
                </tr>
            }
            </tbody>
        }
    </table>
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Submit</button>
</div>
@section scripts
{
    <script>
        var $dropdown1 = $("select[name='Category']");
        var $dropdown2 = $("select[name='Description']");
        $dropdown1.append('<option>Select Category</option>');
        $dropdown2.append('<option>Select Item</option>');
        //First load of list
        $.ajax({
            url: '../api/stationeries/categories/',
            type: 'GET',
            //data: 'q=' + str,
            dataType: 'json',
            success: function (json) {
                $.each(json, function (i, value) {
                    $dropdown1.append($('<option>').text(value).attr('value', value));
                    //$('#myselect').append($('<option>').text(value).attr('value', value));
                });
            }
        });
        //Load 2nd list
        $dropdown1.change(function () {
            $dropdown2.empty();
            $dropdown2.append('<option>Select Item</option>');
            //$('#myselect').append($('<option>').text(value).attr('value', value));
            $.ajax({
                url: '../api/stationeries/categories/' + $dropdown1.val(),
                type: 'GET',
                //data: 'q=' + str,
                dataType: 'json',
                success: function (json) {
                    $.each(json, function (i, value) {
                        $dropdown2.append('<option value="' + value.Id + '">' + value.ItemDescription + '</option>');
                    });
                }
            });
        });
        //Load unit of measure
        $dropdown2.change(function () {
            $.ajax({
                url: '../api/stationeries/item/' + $dropdown2.val(),
                type: 'GET',
                //data: 'q=' + str,
                dataType: 'json',
                success: function (json) {
                    $("#uom").val(json);
                }
            });
        });
    </script>
    
    <script>
            $("#addChild").on("click", function () {
        $.ajax({
            url: '@Url.Action("AddChild", "YourController")'
        }).success(function (partialView) {
            $('#children> tbody:last-child').append(partialView);
        });
    });
    </script>
}