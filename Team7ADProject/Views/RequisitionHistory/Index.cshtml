@model IEnumerable<Team7ADProject.ViewModels.OwnRequisitionHistoryViewModel>

@{
    ViewBag.Title = "Own Requisition History";
}

@*Author:Lynn Lynn Oo for display | Teh Li Heng for Inline Edit and Save function*@


<div class="custcontainer">

    <h2><b>Employee Requisition History</b></h2>
    <br />
    <div class="panel panel-default">
        <table class="cusTable table table-bordered">


            <tr>
                <th>No.</th>
                <th>Item Description</th>
                <th>Quantity</th>
                <th>Unit of Measure</th>
                <th>Request Date</th>
                <th>Status</th>
                <th>Action</th>
            </tr>


            @{ int i = 1;}

            @foreach (var item in Model)
            {
                <tr>
                    <td>@(i++)</td>
                    <td>@item.ItemDescription</td>
                    <td>
                        @if (@item.Status == "Pending Approval")
                        {
                            <input class="requestId" name="itemId" type="hidden" value="@item.RequestId">
                            <input class="itemId" name="itemQuantity" type="hidden" value="@item.ItemId">
                            <input class="itemQuantity" name="itemQuantity" type="hidden" value="@item.ItemQuantity">
                            <div class="inline-view">
                                @item.ItemQuantity
                            </div>
                            <div class='inline-edit' style="display: none">
                                @Html.EditorFor(modelItem => item.ItemQuantity, new { htmlAttributes = new { @type = "number", @min = "1", @step = "1", max="1000", style = "width: 70px", @class = "edit form-control" } })
                            </div>
                        }
                        else
                        {
                            @item.ItemQuantity
                        }
                    </td>
                    <td>@item.UnitOfMeasure</td>
                    <td>@($"{item.RequestDate:dd MMM yyyy}")</td>
                    <td>@item.Status</td>
                    @if (@item.Status == "Pending Approval")
                    {
                        <td>
                            <div class='inline-view'>
                                <a href='#' class="edit">Edit</a>
                            </div>
                            <div class='inline-edit' style='display:none;'>
                                <a href='#' class="save">Save</a>
                            </div>
                            <div class='inline-edit' style='display:none;'>
                                <a href='#' class="cancel">Cancel</a>
                            </div>
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
            }
        </table>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var table = $("table");
        $("table tr a.edit").click(function (event) {
            clearTableSelection();
            var tr = $(this).parents("tr");
            tr.find(".inline-view").hide();
            tr.find(".inline-edit").show();
        });

        $("table tr a.cancel").click(function (event) {
            var tr = $(this).parents("tr");
            tr.find(".inline-view").show();
            tr.find(".inline-edit").hide();
        });

        $("table tr a.save").click(function (event) {
            var tr = $(this).parents("tr");
            var requestId = tr.find(".requestId").val();
            var itemId = tr.find(".itemId").val();
            var oldItemQuantity = tr.find(".itemQuantity").val();
            var newItemQuantity = tr.find(".edit").val();

            var data = JSON.stringify({
                requestId: requestId,
                itemId: itemId,
                oldItemQuantity: oldItemQuantity,
                newItemQuantity: newItemQuantity
            });

            $.when(saveRequest(data)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });
        });

        function clearTableSelection() {
            table.find(".inline-view").show();
            table.find(".inline-edit").hide();
        }

        function saveRequest(data) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "../RequisitionHistory/Save",
                data: data,
                success: function (result) {
                    bootbox.dialog({
                        message: result,
                        size: 'small',
                        onEscape: function () {
                            location.reload();
                        }
                    });
                },

                error: function () {
                    bootbox.dialog({
                        message: 'Error! Invalid data. Numbers must be round value more than 0.',
                        size: 'small',
                        onEscape: function () {
                            //location.reload();
                        }
                    });
                }
            });
        }
    </script>
}