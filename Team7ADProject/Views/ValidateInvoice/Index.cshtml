@using Team7ADProject.Entities
@model Team7ADProject.ViewModels.InvoiceDetailsViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Save", "ValidateInvoice"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")
    <div class="form-group">
        <table>
            <tr>
                <td>@Html.Label("No Of DeliveryOrder")</td>
                @*<td>
                    <button id="decrease" onclick="decreaseValue()">-</button>
                    <input type="number" id="number" value="0" />
                    <button id="increase" onclick="increaseValue()" value="Increase Value">+</button>
                </td>*@
                <td>  @Html.DropDownListFor(m => m.Invoice.SupplierId, new SelectList(Model.Suppliers, "SupplierId", "SupplierName"), "Select Supplier", null)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Invoice.InvoiceId)</td>
                <td>
                    @Html.EditorFor(m => m.Invoice.InvoiceId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Invoice.InvoiceId)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Invoice.InvoiceNo)</td>
                <td>
                    @Html.EditorFor(m => m.Invoice.InvoiceNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Invoice.InvoiceNo)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Invoice.InvoiceDate)</td>
                <td>
                    @Html.EditorFor(m => m.Invoice.InvoiceDate)
                    @Html.ValidationMessageFor(m => m.Invoice.InvoiceDate)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Invoice.SupplierId)</td>
                <td>
                    @Html.DropDownListFor(m => m.Invoice.SupplierId, new SelectList(Model.Suppliers, "SupplierId", "SupplierName"), "Select Supplier", null)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Invoice.InvoiceAmount)</td>
                <td>
                    @Html.EditorFor(m => m.Invoice.InvoiceAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Invoice.InvoiceAmount)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.Label("Item")
                    <button  type="button" onclick="create(1)">+</button>
                </td>
                <td> <div id="screens"></div></td>
            </tr>
        </table>
    </div>
    @Html.AntiForgeryToken()
    <button type="submit" onclick="" class="btn btn-primary">Save</button>
}

<script>
    function increaseValue() {
        var value = parseInt(document.getElementById('number').value, 10);
        value = isNaN(value) ? 0 : value;
        value++;
        document.getElementById('number').value = value;
    }
    function create(param) {
        var s = ""; 
        for (var i = 0; i < param; i++) {
            s += '<input type="text" name="Fname">'; //Create one textbox as HTML
        }
        document.getElementById("screens").innerHTML = s;
    }

    function decreaseValue() {
        var value = parseInt(document.getElementById('number').value, 10);
        value = isNaN(value) ? 0 : value;
        value < 1 ? value = 1 : '';
        value--;
        document.getElementById('number').value = value;
    }</script>


